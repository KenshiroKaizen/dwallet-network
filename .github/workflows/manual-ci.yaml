name: Manual CI Test

on:
  workflow_dispatch:
    inputs:
      note:
        description: 'Optional note'
        required: false
        default: 'Testing from PR branch'

env:
  RUST_BACKTRACE: 1
  RUST_MIN_STACK: 16777216
  # Change to specific Rust release to pin or `stable` for the latest stable version.
  rust_stable: "1.81"
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  GH_PRIVATE_REPO_TOKEN: ${{ secrets.GH_PRIVATE_REPO_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure git with personal access token
        run: |
          git config --global url."https://x-access-token:${{ env.GH_PRIVATE_REPO_TOKEN }}@github.com/".insteadOf "https://github.com/"
      - name: Install Rust ${{ env.rust_stable }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_stable }}
          targets: x86_64-unknown-linux-gnu
      - name: Install Target
        run: rustup target add x86_64-unknown-linux-gnu
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --bin ika --target-dir . --release --target x86_64-unknown-linux-gnu
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          # Version of pnpm to install, must match `package.json` "packageManager" field.
          version: 9.1.1
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
          cache: 'pnpm'

      - name: Install wasm pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      - name: Install dependencies
        run: pnpm install
        working-directory: ./sdk/typescript

      - name: Compile TS tests
        run: |
          cd sdk/typescript
          pnpm install
          npm run build

      - name: Run TS full flow with network DKG test
        run: |
          cd sdk/typescript
          npx vitest run --disableConsoleIntercept test/e2e/dwallet-mpc.test.ts -t="Test dWallet MPC should sign full flow with on-chain network DKG output"