name: Build and Push dWallet Node Images

on:
  workflow_dispatch:

env:
  PRIVATE_ECR_REPOSITORY: sui-fork
  PUBLIC_ECR_REPOSITORY: dwallet-network
  PRIVATE_IMAGE_NAME: dwallet-testnet
  PUBLIC_IMAGE_NAME: dwallet-testnet
  PRIVATE_IMAGE_VERSION: v1.16.2
  PUBLIC_IMAGE_VERSION: v1.16.2

jobs:
  build-and-push:
    name: Build and Push Image to Private and Public ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Get Latest Versions from ECR
        id: get-latest-version
        run: |
          # Get latest version for the private ECR repository
          latest_private_patch_version=$(aws ecr list-images \
            --repository-name $PRIVATE_ECR_REPOSITORY \
            --query 'imageIds[*].imageTag' \
            --output text | grep -oE "$PRIVATE_IMAGE_NAME-$PRIVATE_IMAGE_VERSION-[0-9]+" | sort -V | tail -n 1 | cut -d'-' -f4)

          # Increment the private patch version
          new_private_patch_version=$((latest_private_patch_version + 1))
          echo "New private patch version to push: $new_private_patch_version"
          echo "PRIVATE_IMAGE_VERSION=${PRIVATE_IMAGE_VERSION}-${new_private_patch_version}" >> $GITHUB_ENV

          # Get latest version for the public ECR repository
          latest_public_patch_version=$(aws ecr-public describe-images \
            --repository-name $PUBLIC_ECR_REPOSITORY \
            --query 'imageDetails[].imageTags' \
            --output text | grep -oE "$PUBLIC_IMAGE_NAME-$PUBLIC_IMAGE_VERSION-[0-9]+" | sort -V | tail -n 1 | cut -d'-' -f4)

          # Increment the public patch version
          new_public_patch_version=$((latest_public_patch_version + 1))
          echo "New public patch version to push: $new_public_patch_version"
          echo "PUBLIC_IMAGE_VERSION=${PUBLIC_IMAGE_VERSION}-${new_public_patch_version}" >> $GITHUB_ENV
        env:
          PRIVATE_ECR_REPOSITORY: ${{ env.PRIVATE_ECR_REPOSITORY }}
          PUBLIC_ECR_REPOSITORY: ${{ env.PUBLIC_ECR_REPOSITORY }}
          PRIVATE_IMAGE_NAME: ${{ env.PRIVATE_IMAGE_NAME }}
          PRIVATE_IMAGE_VERSION: ${{ env.PRIVATE_IMAGE_VERSION }}
          PUBLIC_IMAGE_NAME: ${{ env.PUBLIC_IMAGE_NAME }}
          PUBLIC_IMAGE_VERSION: ${{ env.PUBLIC_IMAGE_VERSION }}

      - name: Build and Push to Private ECR
        run: |
          ./docker/sui-node/build.sh \
            --platform linux/amd64 \
            --tag $PRIVATE_ECR_REGISTRY/$PRIVATE_ECR_REPOSITORY:$PRIVATE_IMAGE_NAME-$PRIVATE_IMAGE_VERSION \
            --push
        env:
          PRIVATE_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          PRIVATE_ECR_REPOSITORY: ${{ env.PRIVATE_ECR_REPOSITORY }}
          PRIVATE_IMAGE_NAME: ${{ env.PRIVATE_IMAGE_NAME }}
          PRIVATE_IMAGE_VERSION: ${{ env.PRIVATE_IMAGE_VERSION }}

      - name: Tag and Push to Public ECR
        run: |
          docker tag $PRIVATE_ECR_REGISTRY/$PRIVATE_ECR_REPOSITORY:$PRIVATE_IMAGE_NAME-$PRIVATE_IMAGE_VERSION \
                     $PUBLIC_ECR_REGISTRY/$PUBLIC_ECR_REPOSITORY:$PUBLIC_IMAGE_NAME-$PUBLIC_IMAGE_VERSION
          docker push $PUBLIC_ECR_REGISTRY/$PUBLIC_ECR_REPOSITORY:$PUBLIC_IMAGE_NAME-$PUBLIC_IMAGE_VERSION
        env:
          PRIVATE_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          PUBLIC_ECR_REGISTRY: public.ecr.aws/your-public-registry-id
          PRIVATE_ECR_REPOSITORY: ${{ env.PRIVATE_ECR_REPOSITORY }}
          PUBLIC_ECR_REPOSITORY: ${{ env.PUBLIC_ECR_REPOSITORY }}
          PRIVATE_IMAGE_NAME: ${{ env.PRIVATE_IMAGE_NAME }}
          PUBLIC_IMAGE_NAME: ${{ env.PUBLIC_IMAGE_NAME }}
          PRIVATE_IMAGE_VERSION: ${{ env.PRIVATE_IMAGE_VERSION }}
          PUBLIC_IMAGE_VERSION: ${{ env.PUBLIC_IMAGE_VERSION }}
